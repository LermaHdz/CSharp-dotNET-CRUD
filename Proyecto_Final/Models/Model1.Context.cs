//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proyecto_Final.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TiendaEntities : DbContext
    {
        public TiendaEntities()
            : base("name=TiendaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Asentamiento> Asentamiento { get; set; }
        public virtual DbSet<Contrato> Contrato { get; set; }
        public virtual DbSet<Empleado> Empleado { get; set; }
        public virtual DbSet<EmpleadoTurno> EmpleadoTurno { get; set; }
        public virtual DbSet<Estado> Estado { get; set; }
        public virtual DbSet<EstadoCivil> EstadoCivil { get; set; }
        public virtual DbSet<Estante> Estante { get; set; }
        public virtual DbSet<Estudios> Estudios { get; set; }
        public virtual DbSet<Etiqueta> Etiqueta { get; set; }
        public virtual DbSet<Marca> Marca { get; set; }
        public virtual DbSet<MetodoDePago> MetodoDePago { get; set; }
        public virtual DbSet<Municipio> Municipio { get; set; }
        public virtual DbSet<Nacionalidad> Nacionalidad { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<ProductoEtiqueta> ProductoEtiqueta { get; set; }
        public virtual DbSet<Proveedor> Proveedor { get; set; }
        public virtual DbSet<Puesto> Puesto { get; set; }
        public virtual DbSet<Referencia> Referencia { get; set; }
        public virtual DbSet<Servicio> Servicio { get; set; }
        public virtual DbSet<TipoDeAsentamiento> TipoDeAsentamiento { get; set; }
        public virtual DbSet<TipoDeProducto> TipoDeProducto { get; set; }
        public virtual DbSet<TipoDeProveedor> TipoDeProveedor { get; set; }
        public virtual DbSet<TipoDeTransaccion> TipoDeTransaccion { get; set; }
        public virtual DbSet<Transaccion> Transaccion { get; set; }
        public virtual DbSet<Turno> Turno { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<Zona> Zona { get; set; }
        public virtual DbSet<Antiguedad_Empleados> Antiguedad_Empleados { get; set; }
        public virtual DbSet<Ingreso_Empleados> Ingreso_Empleados { get; set; }
        public virtual DbSet<Productos_con_precio_encima_del_promedio> Productos_con_precio_encima_del_promedio { get; set; }
        public virtual DbSet<Productos_mas_barato> Productos_mas_barato { get; set; }
        public virtual DbSet<Productos_mas_caro> Productos_mas_caro { get; set; }
    
        public virtual int Encriptar(string contraseña, ObjectParameter resultado)
        {
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("contraseña", contraseña) :
                new ObjectParameter("contraseña", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Encriptar", contraseñaParameter, resultado);
        }
    
        public virtual int Random(ObjectParameter resultado)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Random", resultado);
        }
    
        public virtual ObjectResult<sm_BuscarEmpleado_Result> sm_BuscarEmpleado(string nom)
        {
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sm_BuscarEmpleado_Result>("sm_BuscarEmpleado", nomParameter);
        }
    
        public virtual int sm_DisminuirPrecioProducto(Nullable<int> decremento)
        {
            var decrementoParameter = decremento.HasValue ?
                new ObjectParameter("Decremento", decremento) :
                new ObjectParameter("Decremento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sm_DisminuirPrecioProducto", decrementoParameter);
        }
    
        public virtual int sm_DisminuirPrecioProductoPorMarca(Nullable<int> idMarc, Nullable<int> decremento)
        {
            var idMarcParameter = idMarc.HasValue ?
                new ObjectParameter("idMarc", idMarc) :
                new ObjectParameter("idMarc", typeof(int));
    
            var decrementoParameter = decremento.HasValue ?
                new ObjectParameter("Decremento", decremento) :
                new ObjectParameter("Decremento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sm_DisminuirPrecioProductoPorMarca", idMarcParameter, decrementoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sm_GananciasTotalesProductos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sm_GananciasTotalesProductos");
        }
    
        public virtual ObjectResult<Nullable<int>> sm_GananciasTotalesServicios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sm_GananciasTotalesServicios");
        }
    
        public virtual ObjectResult<Nullable<int>> sm_GananciasTotalesTransacciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sm_GananciasTotalesTransacciones");
        }
    
        public virtual int sm_IncrementarPrecioProducto(Nullable<int> incremento)
        {
            var incrementoParameter = incremento.HasValue ?
                new ObjectParameter("Incremento", incremento) :
                new ObjectParameter("Incremento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sm_IncrementarPrecioProducto", incrementoParameter);
        }
    
        public virtual int sm_IncrementarPrecioProductoPorMarca(Nullable<int> idMarc, Nullable<int> incremento)
        {
            var idMarcParameter = idMarc.HasValue ?
                new ObjectParameter("idMarc", idMarc) :
                new ObjectParameter("idMarc", typeof(int));
    
            var incrementoParameter = incremento.HasValue ?
                new ObjectParameter("incremento", incremento) :
                new ObjectParameter("incremento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sm_IncrementarPrecioProductoPorMarca", idMarcParameter, incrementoParameter);
        }
    
        public virtual ObjectResult<sm_InformacionEmpleado_Result> sm_InformacionEmpleado(Nullable<int> idEmp)
        {
            var idEmpParameter = idEmp.HasValue ?
                new ObjectParameter("idEmp", idEmp) :
                new ObjectParameter("idEmp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sm_InformacionEmpleado_Result>("sm_InformacionEmpleado", idEmpParameter);
        }
    
        public virtual int sm_IngresarProducto(Nullable<int> idProd, Nullable<int> cant)
        {
            var idProdParameter = idProd.HasValue ?
                new ObjectParameter("idProd", idProd) :
                new ObjectParameter("idProd", typeof(int));
    
            var cantParameter = cant.HasValue ?
                new ObjectParameter("Cant", cant) :
                new ObjectParameter("Cant", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sm_IngresarProducto", idProdParameter, cantParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sm_NumeroDeServiciosAntesDe(string fECHA)
        {
            var fECHAParameter = fECHA != null ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sm_NumeroDeServiciosAntesDe", fECHAParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sm_NumeroDeServiciosDespuesDe(string fECHA)
        {
            var fECHAParameter = fECHA != null ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sm_NumeroDeServiciosDespuesDe", fECHAParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sm_NumeroDeTransaccionesAntesDe(string fECHA)
        {
            var fECHAParameter = fECHA != null ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sm_NumeroDeTransaccionesAntesDe", fECHAParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sm_NumeroDeTransaccionesDespuessDe(string fECHA)
        {
            var fECHAParameter = fECHA != null ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sm_NumeroDeTransaccionesDespuessDe", fECHAParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sm_NumeroDeVentasAntesDe(string fECHA)
        {
            var fECHAParameter = fECHA != null ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sm_NumeroDeVentasAntesDe", fECHAParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sm_NumeroDeVentasDespuesDe(string fECHA)
        {
            var fECHAParameter = fECHA != null ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sm_NumeroDeVentasDespuesDe", fECHAParameter);
        }
    
        public virtual int sm_RealizarTransaccionServicio(Nullable<int> monto, Nullable<int> idMetodo, Nullable<int> idServicio, Nullable<int> idEmp, string numeroRef, Nullable<int> idUsuar)
        {
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(int));
    
            var idMetodoParameter = idMetodo.HasValue ?
                new ObjectParameter("idMetodo", idMetodo) :
                new ObjectParameter("idMetodo", typeof(int));
    
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("idServicio", idServicio) :
                new ObjectParameter("idServicio", typeof(int));
    
            var idEmpParameter = idEmp.HasValue ?
                new ObjectParameter("idEmp", idEmp) :
                new ObjectParameter("idEmp", typeof(int));
    
            var numeroRefParameter = numeroRef != null ?
                new ObjectParameter("numeroRef", numeroRef) :
                new ObjectParameter("numeroRef", typeof(string));
    
            var idUsuarParameter = idUsuar.HasValue ?
                new ObjectParameter("idUsuar", idUsuar) :
                new ObjectParameter("idUsuar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sm_RealizarTransaccionServicio", montoParameter, idMetodoParameter, idServicioParameter, idEmpParameter, numeroRefParameter, idUsuarParameter);
        }
    
        public virtual int sm_RealizarTransaccionVenta(Nullable<int> monto, Nullable<int> idMetodo, Nullable<int> idProd, Nullable<int> idEmp, Nullable<int> idUsuar)
        {
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(int));
    
            var idMetodoParameter = idMetodo.HasValue ?
                new ObjectParameter("idMetodo", idMetodo) :
                new ObjectParameter("idMetodo", typeof(int));
    
            var idProdParameter = idProd.HasValue ?
                new ObjectParameter("idProd", idProd) :
                new ObjectParameter("idProd", typeof(int));
    
            var idEmpParameter = idEmp.HasValue ?
                new ObjectParameter("idEmp", idEmp) :
                new ObjectParameter("idEmp", typeof(int));
    
            var idUsuarParameter = idUsuar.HasValue ?
                new ObjectParameter("idUsuar", idUsuar) :
                new ObjectParameter("idUsuar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sm_RealizarTransaccionVenta", montoParameter, idMetodoParameter, idProdParameter, idEmpParameter, idUsuarParameter);
        }
    
        public virtual int sm_RetirarProducto(Nullable<int> idProd, Nullable<int> cant)
        {
            var idProdParameter = idProd.HasValue ?
                new ObjectParameter("idProd", idProd) :
                new ObjectParameter("idProd", typeof(int));
    
            var cantParameter = cant.HasValue ?
                new ObjectParameter("Cant", cant) :
                new ObjectParameter("Cant", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sm_RetirarProducto", idProdParameter, cantParameter);
        }
    
        public virtual ObjectResult<sm_ServiciosAntesDe_Result> sm_ServiciosAntesDe(string fECHA)
        {
            var fECHAParameter = fECHA != null ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sm_ServiciosAntesDe_Result>("sm_ServiciosAntesDe", fECHAParameter);
        }
    
        public virtual ObjectResult<sm_ServiciosDespuesDe_Result> sm_ServiciosDespuesDe(string fECHA)
        {
            var fECHAParameter = fECHA != null ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sm_ServiciosDespuesDe_Result>("sm_ServiciosDespuesDe", fECHAParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sm_TotalReembolsos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sm_TotalReembolsos");
        }
    
        public virtual ObjectResult<sm_TransaccionesAntesDe_Result> sm_TransaccionesAntesDe(string fECHA)
        {
            var fECHAParameter = fECHA != null ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sm_TransaccionesAntesDe_Result>("sm_TransaccionesAntesDe", fECHAParameter);
        }
    
        public virtual ObjectResult<sm_TransaccionesDespuesDe_Result> sm_TransaccionesDespuesDe(string fECHA)
        {
            var fECHAParameter = fECHA != null ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sm_TransaccionesDespuesDe_Result>("sm_TransaccionesDespuesDe", fECHAParameter);
        }
    
        public virtual ObjectResult<sm_VentasAntesDe_Result> sm_VentasAntesDe(string fECHA)
        {
            var fECHAParameter = fECHA != null ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sm_VentasAntesDe_Result>("sm_VentasAntesDe", fECHAParameter);
        }
    
        public virtual ObjectResult<sm_VentasDespuesDe_Result> sm_VentasDespuesDe(string fECHA)
        {
            var fECHAParameter = fECHA != null ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sm_VentasDespuesDe_Result>("sm_VentasDespuesDe", fECHAParameter);
        }
    }
}
